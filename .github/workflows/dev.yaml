name: Release to dev
on:
  push:
    branches:
      - dev-cere
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  
jobs:
  build_backend_cerestats_api:
    uses: Cerebellum-Network/reusable-workflows/.github/workflows/deploy-to-ecr.yaml@1.3.0
    with:
      runs-on: '["self-hosted", "cere-network-large-workers"]'
      environment: dev
      aws_account_id: ${{ vars.DEV_NETWORK_AWS_ACCOUNT_ID }}
      repository: stats-api
      file: ./api/Dockerfile
    secrets: inherit
    
  build_backend_cerestats_crawler:
    uses: Cerebellum-Network/reusable-workflows/.github/workflows/deploy-to-ecr.yaml@1.3.0
    with:
      runs-on: '["self-hosted", "cere-network-large-workers"]'
      environment: dev
      aws_account_id: ${{ vars.DEV_NETWORK_AWS_ACCOUNT_ID }}
      repository: stats-crawler
      file: ./backend/docker/crawler/Dockerfile
    secrets: inherit

  build_and_deploy_frontend:
    uses: Cerebellum-Network/reusable-workflows/.github/workflows/build-and-upload-static.yaml@1.0.0
    with:
      runs-on: '["self-hosted", "cere-network-large-workers"]'
      build_container: 'node:14-buster-slim'
      deploy_container: 'ubuntu:20.04'
      install_packages_command: 'cp -rf frontend/frontend.config-cere-dev.js frontend/frontend.config.js; yarn install'
      build_command: 'yarn workspace frontend generate'
      path_to_static_files_to_upload: 'frontend/dist'
    secrets:
      NETWORK_AWS_ACCESS_KEY_ID: ${{ secrets.DEV_NETWORK_AWS_ACCESS_KEY_ID }}
      NETWORK_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_NETWORK_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME_DEV }}
      CF_DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID_DEV }}
